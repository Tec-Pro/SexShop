/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.sf.jasperreports.engine.JRException;


/**
 *
 * @author nico
 */
public class AplicacionGui extends javax.swing.JFrame implements ActionListener{

    private AbmClienteGui abmCliente; //Panel abmCliente
    private AbmProductoGui abmProducto; //Panel abmProducto
    private VentaGui venta;//panel venta
    private VentasRealizadas ventasRealizadas;
    private AbmProveedorGui abmProveedor;
    //estos deben estar en el controlador
    ArticulosCompradosGui art;
    ModificarPrecioPorcentajeGui modificarPrecioGui;
    ControladorJReport reporteClientes;
    ControladorJReport reporteArticulos;
    ControladorJReport reporteFactura;


    /**
     * Creates new form AplicacionGui
     */
    public AplicacionGui() throws ClassNotFoundException, SQLException, JRException {
        initComponents();
        abmCliente = new AbmClienteGui(); //creo el panel de abmClente
        abmProducto = new AbmProductoGui();//creo panel abmProducto
        ventasRealizadas= new VentasRealizadas();
        abmProveedor= new AbmProveedorGui();
        venta= new VentaGui();
        //venta.setActionListener(this);
        tab.add("Cliente", abmCliente);//se los agrego al contenedor de tabs
        tab.add("Producto", abmProducto);
        tab.add("Venta", venta);
        tab.add("ventas realizadas", ventasRealizadas);
        tab.add("Proveedor", abmProveedor);
        tab.setToolTipTextAt(0, "Alta baja y modificacion de clientes");
        tab.setToolTipTextAt(1, "Alta baja y modificacion de productos");
        tab.setToolTipTextAt(2, "Realizar una venta nueva");
        tab.setToolTipTextAt(3, "Ver todas las ventas realizadas para realizar posibles modificaciones");       
        tab.setToolTipTextAt(4, "Alta baja y modificación de proveedores");
        
        //controlador
        reporteClientes = new ControladorJReport("listadoClientes.jasper");
        reporteArticulos = new ControladorJReport("listadoProductos.jasper");
        reporteFactura = new ControladorJReport(("factura.jasper"));
        venta.getImprimir().addActionListener(this);
    }

    public AbmClienteGui getAbmClienteGui(){
        return abmCliente;
    }
    
    public AbmProductoGui getAbmProductoGui(){
        return abmProducto;
    } 

    public VentaGui getVenta() {
        return venta;
    }
    
    
    
    public VentasRealizadas  getVentasRealizadas(){
        return ventasRealizadas;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tab = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        listar = new javax.swing.JMenu();
        listarClientes = new javax.swing.JMenuItem();
        listarArticulos = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Programa");
        setExtendedState(6);
        setLocationByPlatform(true);
        setPreferredSize(new java.awt.Dimension(879, 488));
        getContentPane().add(tab, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        listar.setText("Listado");

        listarClientes.setText("Listado Clientes");
        listarClientes.setToolTipText("Listado de todos los clientes");
        listarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarClientesActionPerformed(evt);
            }
        });
        listar.add(listarClientes);

        listarArticulos.setText("Listado Articulos");
        listarArticulos.setToolTipText("Listado de todos los artículos");
        listarArticulos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarArticulosActionPerformed(evt);
            }
        });
        listar.add(listarArticulos);

        jMenuBar1.add(listar);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    //borrar después
    private void listarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarClientesActionPerformed
        try {
            reporteClientes.mostrarReporte();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AplicacionGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AplicacionGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JRException ex) {
            Logger.getLogger(AplicacionGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listarClientesActionPerformed

    //borrar después
    private void listarArticulosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarArticulosActionPerformed
        try {
            reporteArticulos.mostrarReporte();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AplicacionGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AplicacionGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JRException ex) {
            Logger.getLogger(AplicacionGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listarArticulosActionPerformed
/**
 * @param args the command line arguments
 */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu listar;
    private javax.swing.JMenuItem listarArticulos;
    private javax.swing.JMenuItem listarClientes;
    private javax.swing.JTabbedPane tab;
    // End of variables declaration//GEN-END:variables

    //borrar después, son pruebas
        public void actionPerformed(ActionEvent ae) {
        /*if (abmCliente.getArticulosComprados() == ae.getSource()) {
            art.setLocationRelativeTo(abmCliente);
            art.setVisible(true);
        }
        if (abmProducto.getModificarPrecioPorcentaje() == ae.getSource()) {
            modificarPrecioGui.setVisible(true);
            int[] seleccionados = abmProducto.getTabla().getSelectedRows();
            for (int i = 0; i < seleccionados.length; i++) {
                System.out.println(abmProducto.getTablaArticulos().getValueAt(seleccionados[i], 0).toString());
            }

        }*/
        if(venta.getImprimir()==ae.getSource()){
            try {
                reporteFactura.mostrarFactura(1);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AplicacionGui.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(AplicacionGui.class.getName()).log(Level.SEVERE, null, ex);
            } catch (JRException ex) {
                Logger.getLogger(AplicacionGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
   
}
